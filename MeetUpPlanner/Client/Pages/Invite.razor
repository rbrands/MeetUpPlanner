@page "/invite/{ItemId}"
@inject HttpClient Http
@inject AppState AppStateStore
@using CurrieTechnologies.Razor.Clipboard
@using MeetUpPlanner.Shared
@inject ClipboardService clipboard
@inject NavigationManager NavigationManager



<MeetUp CalendarItem="@meetup" HideParticipants="true" NameDisplayLength="@AppStateStore.ClientSettings.NameDisplayLength" AdditionalText="Über den unten angezeigten Link kann ein Gast eingeladen werden. Dazu den Link kopieren (über den kleinen Button rechts neben dem Link) und per Mail, Messenger oder wie auch immer verschicken. Oder einfach den QR-Code zeigen." />

<div class="row">
    <div class="col">
        <a href="@_checkinUrl" title="Einladungs-Link" target="_blank">@_checkinUrl</a>
        <button class="btn btn-sm btn-outline-secondary" @onclick="(async e => await clipboard.WriteTextAsync(_checkinUrl))" title="In die Zwischenablage kopieren"><span class="oi oi-clipboard"></span></button>
    </div>
</div>
<div class="row">
    <div class="col">
        <img class="img-fluid" src="@_imageUrl" title="QRCode - Link" alt="QRCode-Link" />
    </div>
</div>

@code {
    [Parameter]
    public string ItemId { get; set; }
    ExtendedCalendarItem meetup = new ExtendedCalendarItem();
    string _imageUrl;
    string _checkinUrl = "";

    protected override async Task OnInitializedAsync()
    {
        _checkinUrl = $"{Http.BaseAddress}register/{ItemId}";
        _imageUrl = $"Util/qrcodeimage?link={_checkinUrl}";
        if (!String.IsNullOrEmpty(AppStateStore?.KeyWord))
        {
            await ReadData();
        }
        else
        {
            NavigationManager.NavigateTo("/");
        }
    }
    private async Task ReadData()
    {
        PrepareHttpClient();
        // Get referenced calendar item
        meetup = await Http.GetFromJsonAsync<ExtendedCalendarItem>($"Calendar/extendedcalendaritem?itemId={ItemId}");
    }

    private void PrepareHttpClient()
    {
        if (null != AppStateStore.Tenant?.TenantKey)
        {
            if (!Http.DefaultRequestHeaders.Contains("x-meetup-tenant"))
            {
                Http.DefaultRequestHeaders.Add("x-meetup-tenant", AppStateStore.Tenant.TenantKey);
            }
        }
        if (!Http.DefaultRequestHeaders.Contains("x-meetup-keyword"))
        {
            Http.DefaultRequestHeaders.Add("x-meetup-keyword", AppStateStore.KeyWord);
        }

    }

}
